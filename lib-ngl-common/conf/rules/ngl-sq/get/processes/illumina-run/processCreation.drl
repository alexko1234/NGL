//created on: Feb 2, 2015
package rules

//list any import classes here.



//declare any global variables here
rule "run-name to process property"
	@nglSQ( processCreation )
	dialect "java"
	salience 1000
	no-loop
	when
		$process : Process(typeCode=="illumina-run")
		$runName : PropertyValue() from $process.sampleOnInputContainer.properties.get("Run_Name")
		$contextValidation : ContextValidation()
		eval($contextValidation.isCreationMode()==true && null == $process.properties.get("Run_Name") && null != $runName)
	then
		Logger.debug("processCreation " + $process.sampleOnInputContainer.containerCode + " - " + $process.sampleOnInputContainer.properties.get("Run_Name"));
		if(null == $process.properties.get("Run_Name")){
			$process.properties.put("Run_Name",$process.sampleOnInputContainer.properties.get("Run_Name"));	
		}
	end	

rule "Calculation of estimatedPercent property of pool process "
	@nglSQ( processCreation )
	dialect "java"
	salience 900
	no-loop
    when
        $process : Process(typeCode=="illumina-run")
        $estimatedPercentPerLane : PropertyValue() from $process.properties.get("estimatedPercentPerLane")
        $percentage : Double() from $process.sampleOnInputContainer.percentage
        $contextValidation : ContextValidation()      
     	eval ($contextValidation.isCreationMode()==true && $estimatedPercentPerLane.value !=null && Double.class.isInstance($estimatedPercentPerLane.value) && $percentage!=null) 
    then
    	//Logger.debug("Run estimatedPercentCalculations rules ok");  
        Double val = (Double) $estimatedPercentPerLane.value;
        Logger.debug($process.code+" estimatedPercentPerLane before calculation : "+ val+" $percentage : "+$percentage);
        Double newValue = roundValue(val*$percentage/100.0);
    	$process.properties.remove("estimatedPercentPerLane");
        $process.properties.put("estimatedPercentPerLane", new PropertySingleValue(newValue));
        //Logger.debug("estimatedPercentPerLane after calculation : "+  $process.properties.get("estimatedPercentPerLane").value);
        MongoDBDAO.update(InstanceConstants.PROCESS_COLL_NAME, Process.class, DBQuery.is("code", $process.code), DBUpdate.set("properties.estimatedPercentPerLane.value",newValue));        
        		
	end

rule "check run-name"
	@nglSQ( processCreation )
	dialect "java"
	salience 900
	no-loop
	when
		$process : Process(typeCode=="illumina-run")
		$contextValidation:ContextValidation()
		eval ($contextValidation.isCreationMode()==true)
	then
		Logger.error($process.sampleOnInputContainer.containerCode + " Run_Name : " + $process.properties.get("Run_Name"));
		if(null == $process.properties.get("Run_Name")){
			Logger.error($process.sampleOnInputContainer.containerCode + " n'a pas de  Run_Name : " + $process.properties.get("Run_Name"));
			$contextValidation.addErrors("process",	"error.validationexp.runName", $process.sampleOnInputContainer.sampleCode, $process.sampleOnInputContainer.containerCode);
		}
end		
/*
rule "check run-name 2"
	@nglSQ( processCreation )
	dialect "java"
	salience 900
	no-loop
	when
		$process : Process(typeCode=="illumina-run")
		$runName : PropertyValue() from $process.properties.get("Run_Name")
		$contextValidation:ContextValidation()
		eval ($contextValidation.isCreationMode()==true && "".equals($runName.value))
		//eval(null == $runName || "".equals($runName.value))
	then
		Logger.error($process.sampleOnInputContainer.containerCode + " n'a pas de  Run_Name : " + $process.properties.get("Run_Name"));
		//if(null == $process.properties.get("Run_Name") || "".equals($process.properties.get("Run_Name").get("value")){
		$contextValidation.addErrors("process",	"error.validationexp.runName", $process.sampleOnInputContainer.sampleCode, $process.sampleOnInputContainer.containerCode);
		//}
end		
*/
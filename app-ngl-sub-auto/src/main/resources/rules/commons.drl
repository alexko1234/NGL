#created on: Jul 7, 2014
package birds

import java.util.Date;



rule "Syntax order command line for sendXML specification"
	@BirdsRule(unixSyntaxRule)
	dialect 'java'
	salience 200
	when
		$strategy : UnixCommandSyntaxStrategy ( name == "sendXMLSyntax" , commandLine == null)
	then
		Logger log = Logger.getLogger("ngl.sub.rules");
		log.debug("Syntax sendXML : curl https://www.ebi.ac.uk/ena/submit/drop-box/submit/?auth=ERA%20era-drop-9%20N7mo%2B8F4aHH%2BrCjLTuMo59xwfFo%3D -k -F \"SAMPLE=@sampleXml\" -F \"RUN=@runXml\" -F \"SUBMISSION=@submissionXML\" -F \"STUDY=@studyXML\" -F \"EXPERIMENT=@experimentXML\" ");
		String parameterLine = $strategy.getParameterValue().get("optK")+" ";
		for (String key : $strategy.getParameterValue().keySet()) {
			if(!key.equals("optK") && !key.equals("listAC") && !$strategy.getParameterValue().get(key).equals("-F null") && !key.equals("OptionCD"))
	         parameterLine += $strategy.getParameterValue().get(key) + " ";
	    }
		//Add redirect to AC file
		$strategy.setCommandLine($strategy.getParameterValue().get("OptionCD")+";"+$strategy.getExecutableName() + " " + parameterLine +" > "+$strategy.getParameterValue().get("listAC"));
		log.debug("command line : " + $strategy.getCommandLine());
		
		modify($strategy) {}
end


rule "Syntax order command line for createXML specification"
	@BirdsRule(unixSyntaxRule)
	dialect 'java'
	salience 200
    when
        $strategy : UnixCommandSyntaxStrategy ( name == "createXMLSyntax" , commandLine == null)
    then
        Logger log = Logger.getLogger("ngl.sub.rules");
		$strategy.setCommandLine($strategy.getExecutableName());
		log.debug("command line : " + $strategy.getCommandLine());

end


#Send mail when job is exited
rule "Send error mail when job exited"
@BirdsRule( ExecutionService )
	dialect 'java'
	salience 100
	no-loop
	when
		$executionService : ExecutionService( status == ExecutionService.POST_JOB_EXECUTION_STATUS)
		$job : Job( treatmentSpecification.specificationGroup == false, executionState == Job.ERROR_STATUS )
	then
		//Send mail
		String errorMessage = "Error during executing job. Check outputFile and log \n"+
		"STDOUT "+$job.getProperty(Job.STDOUT)+"\n"+
		"STDERR "+$job.getProperty(Job.STDERR)+"\n"+
		"SCHEDULER STDOUT "+$job.getProperty(JobScheduler.JOB_SCHEDULER_STD_OUTPUT_PATH+JobScheduler.JOB_SCHEDULER_STD_OUTPUT_FILE)+"\n"+
		"SCHEDULER STDERR "+$job.getProperty(JobScheduler.JOB_SCHEDULER_STD_ERROR_PATH+JobScheduler.JOB_SCHEDULER_STD_ERROR_FILE)+"\n"+
		"Exception "+$job.getProperty("Exception");
		
		MailServiceFactory.getInstance().sendMailWithProperties(MailUtil.MAIL_SUBJECT_ERROR, MailUtil.getMessage("Execution Job",$job,$job.getProperty("code"),"",errorMessage));
		
		
end

function void updateParameterXML(String valueParam, Job job, String resourceName)
{
	if(job.getUniqueJobResource(resourceName).getProperty(valueParam)!=null)
		job.setParameterValue(valueParam,job.getParameterValue(valueParam).getValue().replace("%"+valueParam+"%",job.getUniqueJobResource(resourceName).getProperty(valueParam)));
	else
		job.setParameterValue(valueParam,null);
}
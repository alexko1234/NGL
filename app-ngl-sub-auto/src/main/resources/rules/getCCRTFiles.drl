#created on: Jul 15, 2014
package birds

import  fr.genoscope.lis.devsi.birds.impl.factory.ResourcesReferentialServiceFactory;
import fr.cea.ig.auto.submission.SubmissionServicesFactory;
import fr.genoscope.lis.devsi.birds.impl.properties.ProjectProperties;
import fr.cea.ig.auto.submission.SRAFilesUtil;

#Select resource for getCCRTFiles treatment
rule "select resources from nglsub for getCCRTFiles treatment"
	@BirdsRule ( selectionRule )
	salience 200
	dialect 'java'
	no-loop
	when
		$input : InputSpecificationElement(name=="inputGetCCRT", treatmentSpecification.name=="getCCRTFile", project.name == "SRA")
		$resourcesReferential : ResourcesReferential(name=="nglSubRef_processCCRT") 
		$device : JSONDevice() from $resourcesReferential.referentialDevice
		$rps : ResourcePropertiesSet(initialized==false, inputSpecificationElement==$input, resourcesReferential==$resourcesReferential)
		//$groupJob : Job( treatmentSpecification.specificationGroup == true)
	then
		Logger log = Logger.getLogger("ngl.sub.rules");
		$rps.initialize();
		
		//JobResource groupJobResource = $groupJob.getUniqueJobResource("subData");
		Set<ResourceProperties> resourceProperties = new HashSet<ResourceProperties>();
		
		JSONDevice jsonDevice = new JSONDevice();
		
		//Get code submission IP-SUB
		Set<ResourceProperties> rpSubmissions = $device.httpGetJSON(ProjectProperties.getProperty("server")+"/api/sra/submissions?stateCode=IP-SUB", "bot");
		for(ResourceProperties rpSub : rpSubmissions){
			//Get submission code
			String codeSubmission = rpSub.getProperty("code");
			String submissionDirectory = rpSub.getProperty("submissionDirectory");
			Set<ResourceProperties> rpsRawData = jsonDevice.httpGetJSON(ProjectProperties.getProperty("server")+"/api/sra/experiments/rawDatas?submissionCode="+codeSubmission,"bot");
			rpsRawData = SRAFilesUtil.filterByLocation(rpsRawData);
			for(ResourceProperties rp : rpsRawData){
				ResourceProperties newRp = new ResourceProperties();
				rp.setProperty("code",codeSubmission);
				rp.setProperty("submissionDirectory",submissionDirectory);
				rp.setProperty("relatifName",rp.getProperty("relatifName");
				rp.setProperty("directory",rp.getProperty("directory");
				resourceProperties.add(newRp);
			}
		}
		log.debug("size resources "+resourceProperties.size());
		$rps.setResourcePropertiesSet(resourceProperties);
		modify($rps){};
end

rule "set parameter for getCCRTFiles"
	@BirdsRule(fsRule)
	dialect 'java'
	salience 300
	no-loop
		when
			$treatSpec : TreatmentSpecification(name=="getCCRTFile", project.name=="SRA")
			$job : Job()
		then
			Logger log = Logger.getLogger("ngl.sub.rules");
			log.debug("set parameter value");
			
			String fileName = $job.getUniqueJobResource("inputGetCCRT").getProperty("relatifName");
			String fileCCRT =  $job.getUniqueJobResource("inputGetCCRT").getProperty("directory")+File.separator+fileName;
			String filePath = $job.getUniqueJobResource("inputGetCCRT").getProperty("submissionDirectory")+File.separator+fileName;
			String userCCRT = $job.getTreatmentSpecification().getProject().getProjectProperties().get("ccrt_user");
			
			String gsisshParam = $job.getParameterValue("gsisshParam").getValue().replace("%userCCRT%",userCCRT).replace("%ccrtFileName%",fileCCRT);
			$job.setParameterValue("gsisshParam", gsisshParam);
			
			String endArg = $job.getParameterValue("endArg").getValue().replace("%filePath%",filePath);
			$job.setParameterValue("endArg", endArg);
end
# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

->  /authentication authentication.Routes

# Home page
GET		/											@controllers.main.tpl.Main.home()

#------------
# Submission
#------------
GET		/sra/submissions/:homeCode/home					@controllers.sra.submissions.tpl.Submissions.home(homeCode : java.lang.String)
GET		/sra/submissions/:code							@controllers.sra.submissions.tpl.Submissions.get(code : java.lang.String)
GET		/tpl/sra/submissions/create						@controllers.sra.submissions.tpl.Submissions.create()
GET		/tpl/sra/submissions/activate					@controllers.sra.submissions.tpl.Submissions.activate()
GET		/tpl/sra/submissions/consultation				@controllers.sra.submissions.tpl.Submissions.consultation()
GET		/tpl/sra/submissions/details					@controllers.sra.submissions.tpl.Submissions.details()
GET		/tpl/sra/submissions/js-routes					@controllers.sra.submissions.tpl.Submissions.javascriptRoutes()
PUT		/api/sra/submissions/:submissionCode/activate	@controllers.sra.submissions.api.Submissions.activate(submissionCode : java.lang.String)

# Mise à jour d'un objet submission et de ses composants :
PUT		/sra/submissions/:code 							@controllers.sra.submissions.api.Submissions.update(code: java.lang.String) 
# todo verifier s'il faut prefixer de api pour updateState
PUT		/sra/submissions/:code/state				    @controllers.sra.submissions.api.Submissions.updateState(code:java.lang.String)
POST	/api/sra/submissions                            @controllers.sra.submissions.api.Submissions.save()
GET		/api/sra/submissions							@controllers.sra.submissions.api.Submissions.list()
GET		/api/sra/submissions/:code						@controllers.sra.submissions.api.Submissions.get(code: java.lang.String)

# Creation des fichiers xml pour l'objet submission :
PUT		/sra/submissions/:code/xml						@controllers.sra.submissions.api.Submissions.createXml(code: java.lang.String)
# Traitement des AC et mise a jour du status de l'objet submission :
PUT		/sra/submissions/:code/ebiAc					@controllers.sra.submissions.api.Submissions.treatmentAc(code: java.lang.String) 
PUT		/sra/submissions/:code/release					@controllers.sra.submissions.api.Submissions.treatmentRelease(code: java.lang.String) 


#-----------------
# Configurations
#-----------------

GET		/sra/configurations/:homeCode/home			@controllers.sra.configurations.tpl.Configurations.home(homeCode: java.lang.String)
GET		/sra/configurations/:code			     	@controllers.sra.configurations.tpl.Configurations.get(code: java.lang.String)
GET		/tpl/sra/configurations/create				@controllers.sra.configurations.tpl.Configurations.create()
GET		/tpl/sra/configurations/js-routes			@controllers.sra.configurations.tpl.Configurations.javascriptRoutes()
# version avec details inutilisee
#GET	/tpl/sra/configurations/details				controllers.sra.configurations.tpl.Configurations.details()

GET 	/api/sra/configurations					    @controllers.sra.configurations.api.Configurations.list()
GET		/tpl/sra/configurations/consultation		@controllers.sra.configurations.tpl.Configurations.consultation()
GET		/api/sra/variables			           		controllers.sra.api.Variables.list()
GET		/api/sra/variables/:type/:code         		controllers.sra.api.Variables.get(type: java.lang.String, code: java.lang.String)

###http://localhost:9000/api/sra/configurations/CONF_BCZ_098K3YVFH
# methode get du controlleur api qui est heritée d'un parent de DocumentController
GET		/api/sra/configurations/:code				@controllers.sra.configurations.api.Configurations.get(code: java.lang.String)

# Mise à jour d'un objet configuration et de ses composants :
PUT		/sra/configurations/:code 					@controllers.sra.configurations.api.Configurations.update(code: java.lang.String) 
POST	/api/sra/configurations					    @controllers.sra.configurations.api.Configurations.save()


#----------
# Studies
#----------
GET		/sra/studies/:homeCode/home					@controllers.sra.studies.tpl.Studies.home(homeCode: java.lang.String)
#http://localhost:9000/api/sra/studies?
#http://localhost:9000/api/sra/studies?datatable=true&paginationMode=local&projCode=BCZ
GET		/api/sra/studies							@controllers.sra.studies.api.Studies.list()
POST	/api/sra/studies							@controllers.sra.studies.api.Studies.save()
GET		/tpl/sra/studies/create					    @controllers.sra.studies.tpl.Studies.create()
###release fait dans menu details mais si on fait un menu release dedié alors prevoir url:
#GET		/tpl/sra/studies/release					controllers.sra.studies.tpl.Studies.release()
GET		/tpl/sra/studies/js-routes				   	@controllers.sra.studies.tpl.Studies.javascriptRoutes()
GET		/tpl/sra/studies/details				    @controllers.sra.studies.tpl.Studies.details()

# methode get du controlleur api qui est heritée d'un parent de DocumentController
GET		/api/sra/studies/:code			        	@controllers.sra.studies.api.Studies.get(code: java.lang.String)
GET		/sra/studies/:code			            	@controllers.sra.studies.tpl.Studies.get(code: java.lang.String)

GET		/tpl/sra/studies/consultation	        	@controllers.sra.studies.tpl.Studies.consultation()
# Mise à jour d'un objet study et de ses composants :
PUT		/sra/studies/:code 							@controllers.sra.studies.api.Studies.update(code: java.lang.String) 
PUT		/sra/studies/internal/:code					@controllers.sra.studies.api.StudiesInternal.update(code: java.lang.String)
POST	/api/sra/studies					    	@controllers.sra.studies.api.Studies.save()
PUT		/api/sra/studies/:studyCode/release	        @controllers.sra.studies.api.Studies.release(studyCode : java.lang.String)

PUT		/sra/studies/:code/state				    @controllers.sra.studies.api.Studies.updateState(code:java.lang.String)

#--------
# Samples
#--------
GET		/api/sra/samples							@controllers.sra.samples.api.Samples.list()
GET		/api/sra/samples/:code						@controllers.sra.samples.api.Samples.get(code: java.lang.String)
PUT		/api/sra/samples/:code						@controllers.sra.samples.api.Samples.update(code: java.lang.String)
PUT		/api/sra/samples/internal/:code				@controllers.sra.samples.api.SamplesInternal.update(code: java.lang.String)
#-------------
# Experiments
#-------------
GET		/api/sra/experiments						@controllers.sra.experiments.api.Experiments.list()
GET		/api/sra/experiments/rawDatas				@controllers.sra.experiments.api.ExperimentsRawDatas.list()
GET		/api/sra/experiments/readSpecs				@controllers.sra.experiments.api.ExperimentsReadSpecs.list()
GET		/api/sra/experiments/:code					@controllers.sra.experiments.api.Experiments.get(code: java.lang.String)
PUT		/api/sra/experiments/:code					@controllers.sra.experiments.api.Experiments.update(code: java.lang.String)
GET 	/api/sra/experiments/run/:code				@controllers.sra.experiments.api.ExperimentsRuns.get(code: java.lang.String)
PUT		/api/sra/experiments/run/:code				@controllers.sra.experiments.api.ExperimentsRuns.update(code: java.lang.String)

#-------------------
# ExperimentsRawData
#-------------------

PUT		/api/sra/experiments/:code/rawDatas/:relatifName	@controllers.sra.experiments.api.ExperimentsRawDatas.update(code: java.lang.String, relatifName: java.lang.String)
GET		/api/sra/experiments/:code/rawDatas/:relatifName	@controllers.sra.experiments.api.ExperimentsRawDatas.get(code: java.lang.String, relatifName: java.lang.String)

#-----------------
# ExperimentsRuns
#-----------------




#readsets from ngl-common attention pas de '@' devant car controller ecrit il y a 3 ans et qui herite de 
#--------
GET    	/api/readsets	                 			controllers.readsets.api.ReadSets.list()

#---------
# projects from ngl-common
#---------
GET		/api/projects								@controllers.projects.api.Projects.list()

# states from ngl-Common
GET		/api/commons/states							controllers.commons.api.States.list()
#----------------
# documentation
#----------------
GET		/sra/documentation/home						@controllers.sra.documentation.tpl.Documentation.home()



# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               									controllers.Assets.at(path="/public", file)
GET     /messages.js                									@controllers.main.tpl.Main.jsMessages()
GET     /codes.js        	        									@controllers.main.tpl.Main.jsCodes()
